@model AxelHarveyStudio.DATA.EF.OwnerAsset

@{
    ViewBag.Title = "Create a Member";
}
<br /><br />
<br /><br />
<br /><br />
<h2 class="text-center">@ViewBag.Title</h2>

@* Image upload step 1. *@
@using (Html.BeginForm("Create", "OwnerAssets", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group text-center" style="padding-bottom: 3rem;">
        @*@Html.LabelFor(model => model.AssetName, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-6 offset-3 text-center">
            @Html.EditorFor(model => model.AssetName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name of Member" } })
            @Html.ValidationMessageFor(model => model.AssetName, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group" style="padding-bottom: 3rem;">
        @*@Html.LabelFor(model => model.OwnerNotes, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-6 offset-3">
            @Html.EditorFor(model => model.OwnerNotes, new { htmlAttributes = new { @class = "form-control", @rows = "5", @placeholder = "Place your studio booking brief about your member here. (i.e. instrument(s) involved, style of your music, musical influences, anything you want the engineer to know, etc.)" } })
            @Html.ValidationMessageFor(model => model.OwnerNotes, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (Request.IsAuthenticated && User.IsInRole("Admin"))
    {
        <div class="form-group" style="padding-bottom: 3rem;">
            @Html.LabelFor(model => model.EmployeeNotes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6 offset-3">
                @Html.EditorFor(model => model.EmployeeNotes, new { htmlAttributes = new { @class = "form-control", @rows = "5" } })
                @Html.ValidationMessageFor(model => model.EmployeeNotes, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    @if (Request.IsAuthenticated && User.IsInRole("Employee"))
    {
        <div class="form-group" style="padding-bottom: 3rem;">
            @Html.LabelFor(model => model.EmployeeNotes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6 offset-3">
                @Html.EditorFor(model => model.EmployeeNotes, new { htmlAttributes = new { @class = "form-control", @rows = "10" } })
                @Html.ValidationMessageFor(model => model.EmployeeNotes, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    <div class="form-group text-center" style="padding-bottom: 1rem;">
        @Html.LabelFor(model => model.AssetPhoto, htmlAttributes: new { @class = "control-label col-md-2", @style="padding-bottom: 1rem;"})
        <div class="col-md-2 offset-5">
            @* Image Upload step 2: comment out EditorFor. Replace with Input tag (type = file,
                name = AssetPhoto, style=Display: inline). The name of this attribute MUST MATCH the value passed into the POST later
                on. Spelling matters, casing does not.*@
            <input class="" type="file" name="AssetPhoto" style="" />
            @*@Html.EditorFor(model => model.AssetPhoto, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.AssetPhoto, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group" style= "padding-bottom: 3rem; padding-left: 1.5rem;">
       
        <div class="col-md-2 offset-5" style="display: inline;">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
            <div class="checkbox " style="display: inline; padding-left: .5rem;">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.DateAdded, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateAdded, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateAdded, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.Review, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Review, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Review, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group " style="padding-bottom: 1rem;">
        <div class=" text-center">
            <input type="submit" value="Create Member" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div class="text-center">
    @Html.ActionLink("Cancel Creation", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
